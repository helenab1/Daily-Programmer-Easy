// Find the number of the year for the given date. 
// For example, january 1st would be 1, and december 31st is 365.
// for extra credit, allow it to calculate leap years, as well.

#include <iostream>
#include <string>
#include <sstream>
using namespace std;

int isLeapYear(int);

int main () {
	
	int month, date, year;
	string fullDate;
	cout << "Please enter the date in the following format: 10 15 2018: \n";
	getline(cin, fullDate);
	stringstream(fullDate) >> month >> date >> year;
	
	int monthAcc = 0;
	int months[12] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30};
	int leapMonths[12] = {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30};
	
	int leapYear = isLeapYear(year);
	// if year % 4 == 0: leap year
	
	int month = 4;
	
	if(leapYear == 1) {
		for(int i = 0; i < month; i++) {
			monthAcc = leapMonths[i-1] + monthAcc; // i-1 so it doesn't count the current month
		}
	}
	else {	
		for(int i = 0; i < month; i++) {
			monthAcc = months[i-1] + monthAcc; // i-1 so it doesn't count the current month
		}
	}
	
	cout << monthAcc + date; // Tests April 15th on regular year. Works!!
	
	return 0;
	
}

//**********************************************
//This function goes down a list of conditions *
//to determine whether or not a year is a leap *
//year. The order is important: it first checks*
//century years for the two rarer conditions & *
//then checks any year with the %4 == 0.       *
//**********************************************

int isLeapYear (int year) {	
	if((year % 400) == 0)
		return 1;
	else if((year % 100) == 0)
		return 0;
	else if((year % 4) == 0)	
		return 1;
}
